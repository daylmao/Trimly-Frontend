@inject NavigationManager NavigationManager
@page "/owner/companies"
@using Trimly.Core.Application.DTOs
@using Trimly.Core.Application.DTOs.Companies
@using Trimly.Core.Application.DTOs.Services
@using Trimly.Infrastructure.Api
@inject IRegisteredCompanyService RegisteredCompanyService
@inject IServices ServiceCompanyService
@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService

<div class="min-h-screen bg-background text-text">
  <div class="flex h-screen overflow-hidden">
    <!-- Sidebar -->
    <aside class="hidden md:flex md:flex-col w-64 bg-surface border-r border-gray-700">
      <!-- Logo -->
      <div class="p-4 border-b border-gray-700">
        <NavLink href="/" class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          Trimly
        </NavLink>
      </div>

      <!-- Navigation -->
      <nav class="flex-1 overflow-y-auto py-4">
        <ul class="space-y-1 px-2">
          <li>
            <NavLink href="/owner-dashboard" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-tachometer-alt w-5 h-5 mr-3"></i>
              Dashboard
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/companies" class="flex items-center px-4 py-2 text-sm rounded-md bg-primary/10 text-primary">
              <i class="fas fa-store w-5 h-5 mr-3"></i>
              Mis Barberías
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/barberos" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-cut w-5 h-5 mr-3"></i>
              Barberos
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/schedule" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-clock w-5 h-5 mr-3"></i>
              Horarios
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/appointments" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-calendar-alt w-5 h-5 mr-3"></i>
              Citas
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/reviews" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-star w-5 h-5 mr-3"></i>
              Reseñas
            </NavLink>
          </li>
        </ul>

        <div class="mt-8 px-4">
          <h3 class="px-2 text-xs font-semibold text-gray-400 uppercase tracking-wider">
            Configuración
          </h3>
          <ul class="mt-2 space-y-1">
            <li>
              <NavLink href="/owner/profile" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
                <i class="fas fa-user-circle w-5 h-5 mr-3"></i>
                Mi Perfil
              </NavLink>
            </li>
            <li>
              <NavLink href="/owner/settings" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
                <i class="fas fa-cog w-5 h-5 mr-3"></i>
                Ajustes
              </NavLink>
            </li>
          </ul>
        </div>
      </nav>

      <!-- User -->
      <div class="px-4 py-3 border-t border-gray-800/50 bg-gradient-to-r from-gray-900/50 to-gray-800/20">
        <div class="flex items-center justify-between">

          <div class="relative">
            <div class="w-10 h-10 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
              <i class="fas fa-user-astronaut text-sm text-white/90"></i>
            </div>
            <div class="absolute -bottom-0.5 -right-0.5 w-3 h-3 rounded-full bg-gradient-to-r from-emerald-400 to-cyan-400 border-2 border-gray-900 animate-pulse"></div>
          </div>

          <div class="flex-1 px-3 overflow-hidden">
            <p class="text-sm font-medium tracking-wide text-gray-100 truncate">
              Mi Cuenta
            </p>
            <p class="text-xs text-purple-300/80 font-medium truncate">
              Propietario
            </p>
          </div>

          <button @onclick="Logout"
                  class="p-2 rounded-full group transition-all duration-300 hover:bg-purple-900/20"
                  title="Cerrar sesión">
            <div class="relative">
              <i class="fas fa-arrow-right-from-bracket text-gray-400 group-hover:text-purple-300 group-hover:scale-110 transition-all duration-300"></i>
              <div class="absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_12px_3px_rgba(196,181,253,0.4)] transition-all duration-500"></div>
            </div>
          </button>
        </div>
      </div>
    </aside>

    <!-- Main Content -->
    <div class="flex-1 flex flex-col overflow-hidden">
      <!-- Top Header -->
      <header class="bg-surface/80 backdrop-blur-md shadow-md z-10">
        <div class="px-4 py-4 flex justify-between items-center">
          <div>
            <h1 class="text-xl font-semibold">Mis Barberías</h1>
            <p class="text-sm text-gray-400">Gestiona tus establecimientos</p>
          </div>
        </div>
      </header>

      <!-- Main Content Area -->
      <main class="flex-1 overflow-y-auto bg-background flex items-center justify-center p-6">
        <section class="bg-surface border border-white/5 rounded-3xl px-10 py-14 text-center shadow-md max-w-xl w-full">
          <div class="relative w-24 h-24 mx-auto mb-6">
            <div class="absolute inset-0 bg-primary/10 rounded-full animate-ping"></div>
            <div class="relative z-10 flex items-center justify-center bg-primary/20 text-primary rounded-full w-full h-full">
              <i class="fas fa-cut text-3xl"></i>
            </div>
          </div>

          <h2 class="text-2xl font-bold text-primary mb-3">Listo para comenzar?</h2>
          <p class="text-gray-500 mb-6 text-sm">
            Todavia no tenes barberias registradas<br />
            Empeza creando la primera para que puedas organizar tus barberos y servicios
          </p>

          <button @onclick="ShowModal"
                  class="w-fit mx-auto px-5 py-2.5 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white rounded-lg font-medium flex items-center justify-center transition-all shadow-lg shadow-primary/10">
            <i class="fas fa-plus mr-2"></i>
            Registrar barberia
          </button>
        </section>
      </main>
    </div>
  </div>

  <!-- Modal para CREAR barbería -->
  @if (showModal)
  {
    <div class="fixed inset-0 z-50">
      <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" @onclick="CloseModal"></div>
      <div class="absolute inset-0 flex items-center justify-center p-4">
        <div class="bg-surface rounded-xl shadow-2xl w-full max-w-3xl max-h-[90vh] overflow-hidden flex flex-col">
          <!-- Encabezado -->
          <div class="p-6 border-b border-gray-700 flex justify-between items-center bg-gradient-to-r from-gray-900 to-gray-800">
            <div>
              <h3 class="text-xl font-bold text-white">Añadir Barbería</h3>
              <p class="text-sm text-gray-300">Completa los detalles de tu barbería</p>
            </div>
            <button @onclick="CloseModal"
                    class="p-2 rounded-full hover:bg-gray-700 transition-colors text-gray-300 hover:text-white">
              <i class="fas fa-times text-lg"></i>
            </button>
          </div>

          <!-- Contenido -->
          <div class="flex-1 overflow-y-auto p-6">
            <!-- Mensajes de estado dentro del modal -->
            @if (!string.IsNullOrEmpty(successMessage))
            {
              <div class="mb-6 p-4 bg-green-500/10 border border-green-500/30 rounded-lg flex items-start">
                <i class="fas fa-check-circle text-green-400 mt-1 mr-3"></i>
                <div>
                  <p class="font-medium text-green-400">¡Barbería creada!</p>
                  <p class="text-sm text-green-300">@successMessage</p>
                </div>
                <button @onclick="() => successMessage = null"
                        class="ml-auto text-green-400 hover:text-green-300">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            }
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
              <div class="mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-lg flex items-start">
                <i class="fas fa-exclamation-circle text-red-400 mt-1 mr-3"></i>
                <div>
                  <p class="font-medium text-red-400">¡Error!</p>
                  <p class="text-sm text-red-300">@errorMessage</p>
                </div>
                <button @onclick="() => errorMessage = null"
                        class="ml-auto text-red-400 hover:text-red-300">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            }

            <EditForm Model="@barbershopModel" OnValidSubmit="@HandleSubmit">
              <DataAnnotationsValidator />

              <div class="space-y-5">
                <!-- Información Básica -->
                <div class="md:col-span-2">
                  <h4 class="text-md font-medium mb-3 pb-2 border-b border-gray-700">Información Básica</h4>
                </div>

                <!-- Nombre y Teléfono -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Nombre de la Barbería *</label>
                    <InputText @bind-Value="barbershopModel.Name"
                               class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                               placeholder="Ej: Barbería Moderna"/>
                    <ValidationMessage For="@(() => barbershopModel.Name)" class="text-red-400 text-xs mt-1" />
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Teléfono *</label>
                    <InputText @bind-Value="barbershopModel.PhoneNumber"
                               class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                               placeholder="Ej: 8096998888"/>
                    <ValidationMessage For="@(() => barbershopModel.PhoneNumber)" class="text-red-400 text-xs mt-1" />
                  </div>
                </div>

                <!-- Email y RNC -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">Email</label>
                    <InputText @bind-Value="barbershopModel.Email"
                               class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                               placeholder="Ej: info@barberiamoderna.com"/>
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">RNC</label>
                    <InputText @bind-Value="barbershopModel.Rnc"
                               class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                               placeholder="Ej: 123456789"/>
                  </div>
                </div>

                <!-- Dirección -->
                <div>
                  <label class="block text-sm font-medium text-gray-300 mb-2">Dirección *</label>
                  <InputText @bind-Value="barbershopModel.AddresCompanies"
                             class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                             placeholder="Ej: Calle Gran Vía 28"/>
                  <ValidationMessage For="@(() => barbershopModel.AddresCompanies)" class="text-red-400 text-xs mt-1" />
                </div>

                <!-- Imágenes -->
                <div class="md:col-span-2">
                  <h4 class="text-md font-medium mb-3 pb-2 border-b border-gray-700">Imágenes</h4>
                  <label class="block text-sm text-gray-400 mb-2">Imagen principal</label>
                  <div class="border-2 border-dashed border-gray-600 rounded-lg p-4 text-center">
                    <div class="flex flex-col items-center justify-center">
                      <i class="fas fa-cloud-upload-alt text-gray-400 text-3xl mb-2"></i>
                      <p class="text-sm text-gray-400 mb-2">Arrastra una imagen o haz clic para seleccionar</p>
                      <InputFile OnChange="@HandleImageUpload" accept="image/*"
                                 class="block w-full text-sm text-gray-400
                                                     file:mr-4 file:py-2 file:px-4
                                                     file:rounded-md file:border-0
                                                     file:text-sm file:font-semibold
                                                     file:bg-primary file:text-white
                                                     hover:file:bg-primary/90"/>
                      @if (imagePreviewUrl != null)
                      {
                        <div class="mt-4">
                          <img src="@imagePreviewUrl" class="max-h-40 rounded-md" alt="Vista previa de la imagen"/>
                        </div>
                      }
                    </div>
                  </div>
                </div>

                <!-- Descripción -->
                <div>
                  <label class="block text-sm font-medium text-gray-300 mb-2">Descripción</label>
                  <InputTextArea @bind-Value="barbershopModel.DescriptionCompanies" rows="4"
                                 class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                 placeholder="Describe tu barbería..."/>
                </div>
              </div>

              <!-- Footer con botones -->
              <div class="mt-8 pt-5 border-t border-gray-700 flex justify-end space-x-3">
                <button type="button" @onclick="CloseModal"
                        class="px-5 py-2.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium transition-all">
                  Cancelar
                </button>
                <button type="submit" disabled="@isLoading"
                        class="px-5 py-2.5 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white rounded-lg font-medium flex items-center transition-all shadow-lg shadow-primary/10">
                  @if (isLoading)
                  {
                    <span class="animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2"></span>
                    <span>Guardando...</span>
                  }
                  else
                  {
                    <i class="fas fa-save mr-2"></i>
                    <span>Guardar Barbería</span>
                  }
                </button>
              </div>
            </EditForm>
          </div>
        </div>
      </div>
    </div>
  }

  <!-- Spinner de bloqueo -->
  @if (isLoading)
  {
    <div class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center">
      <div class="text-center bg-surface p-8 rounded-xl shadow-2xl border border-gray-700 max-w-md">
        <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-primary mx-auto mb-4"></div>
        <h3 class="text-lg font-medium text-white mb-2">Procesando solicitud</h3>
        <p class="text-gray-400">Por favor espera mientras completamos tu solicitud...</p>
      </div>
    </div>
  }
</div>

@code {
  private bool showModal = false;
  private bool isLoading = false;
  private string imagePreviewUrl;
  private string successMessage = "";
  private CreateRegisteredCompaniesDTO barbershopModel = new();
  private IBrowserFile imageFile;
  private string errorMessage = "";


  private void ShowModal()
  {
    showModal = true;
    successMessage = "";
    barbershopModel = new CreateRegisteredCompaniesDTO();
    imagePreviewUrl = null;
    imageFile = null;
  }

  private void CloseModal() => showModal = false;

  private async Task HandleImageUpload(InputFileChangeEventArgs e)
  {
    try
    {
      const long maxFileSize = 5 * 1024 * 1024;

      imageFile = e.File;
      barbershopModel.ImageFile = e.File;

      if (imageFile.Size > maxFileSize)
      {
        return;
      }

      var format = "image/png";
      var resizedImage = await e.File.RequestImageFileAsync(format, 800, 800);
      var buffer = new byte[resizedImage.Size];
      await resizedImage.OpenReadStream(maxFileSize).ReadAsync(buffer);
      imagePreviewUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
    }
    catch (Exception ex)
    {
      Console.WriteLine($"Error al cargar imagen: {ex.Message}");
    }
  }

private async Task HandleSubmit()
{
    isLoading = true;
    errorMessage = ""; // Limpiar mensajes de error previos
    StateHasChanged();

    try
    {
        var result = await RegisteredCompanyService.CreateCompany(barbershopModel);

        if (result.Success)
        {
            successMessage = "¡Barbería creada exitosamente!";

            var companiesList = await LocalStorage.GetItemAsync<List<RegisteredCompaniesDTO>>("CompaniesList") ?? new List<RegisteredCompaniesDTO>();

            var newCompany = new RegisteredCompaniesDTO
            {
                RegisteredCompaniesId = result.Data.RegisteredCompaniesId,
                Name = barbershopModel.Name,
                PhoneNumber = barbershopModel.PhoneNumber,
                Email = barbershopModel.Email,
                AddresCompanies = barbershopModel.AddresCompanies,
                DescriptionCompanies = barbershopModel.DescriptionCompanies,
                LogoUrl = result.Data.LogoUrl,
                RegistrationDateCompany = DateTime.UtcNow,
                Status = Status.Activated
            };

            companiesList.Add(newCompany);
            await LocalStorage.SetItemAsync("CompaniesList", companiesList);
            await LocalStorage.SetItemAsync("CurrentCompanyId", result.Data.RegisteredCompaniesId);

            // Limpiar después de 3 segundos
            await Task.Delay(3000);
            successMessage = string.Empty;
            showModal = false;
            StateHasChanged();
        }
        else
        {
            if (result.ValidationMessages != null && result.ValidationMessages.Any())
            {
                errorMessage = "Por favor, verifica los siguientes errores de validación:";
                foreach (var validationError in result.ValidationMessages)
                {
                    errorMessage += $"\n{validationError.propertyName}: {string.Join(", ", validationError.errorMessage)}";
                }
            }
            else
            {
                errorMessage = result.ErrorMessage ?? "Ocurrió un error al crear la barbería";
            }
        }
    }
    catch (Exception ex)
    {
        errorMessage = $"Error: {ex.Message}";
        Console.WriteLine($"Exception: {ex.Message}");
    }
    finally
    {
        isLoading = false;
        StateHasChanged();
    }
}

  private async Task Logout()
  {
    await AuthService.LogoutAsync();
    NavigationManager.NavigateTo("/login");
  }
}