@page "/explorer"
@using Trimly.Core.Application.DTOs.Companies
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@attribute [Authorize(Roles = nameof(Roles.Client))]


<body class="bg-background text-text min-h-screen">
    <!-- Encabezado -->
    <header class="bg-surface/90 backdrop-blur-lg shadow-xl sticky top-0 z-50 border-b border-white/5">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <!-- Logo -->
                <div class="flex items-center">
                    <a href="/user/home" class="flex items-center group">
                        <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent group-hover:bg-gradient-to-l transition-all duration-500">Trimly</span>
                        <span class="ml-2 w-2 h-2 rounded-full bg-primary animate-pulse"></span>
                    </a>
                </div>
                
                <!-- Navegación -->
                <nav class="hidden md:flex items-center space-x-1">
                    <a href="/user/home" class="px-3 py-2 rounded-md text-sm font-medium relative group">
                        <span class="relative z-10 flex items-center">
                            <i class="fas fa-home mr-2 text-gray-400 group-hover:text-primary transition-colors"></i>
                            Inicio 
                        </span>
                        <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300"></span>
                    </a>
                    
                    <a href="/explorer" class="px-3 py-2 rounded-md text-sm font-medium relative group">
                        <span class="relative z-10 flex items-center">
                            <i class="fas fa-search mr-2 text-primary"></i>
                            Explorar 
                        </span>
                        <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-full transition-all duration-300"></span>
                    </a>
                    
                    <a href="/appointments" class="px-3 py-2 rounded-md text-sm font-medium relative group">
                        <span class="relative z-10 flex items-center">
                            <i class="fas fa-calendar-alt mr-2 text-gray-400 group-hover:text-primary transition-colors"></i>
                            Mis Citas
                        </span>
                        <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300"></span>
                    </a>
                </nav>

                <!-- Perfil -->
                <div class="flex items-center space-x-4">
                    <div class="relative group">
                        <div class="flex items-center space-x-1 p-1 rounded-full hover:bg-gray-700/50 transition-all duration-300 cursor-pointer">
                            <div class="relative">
                                <div class="w-8 h-8 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
                                    <i class="fas fa-user-astronaut text-sm text-white/90"></i>
                                </div>
                                <span class="absolute bottom-0 right-0 w-2.5 h-2.5 bg-green-500 rounded-full border border-gray-800"></span>
                            </div>
                            <i class="fas fa-chevron-down text-xs hidden md:block transition-transform duration-300 group-hover:rotate-180"></i>
                        </div>

                        <div class="absolute right-0 mt-2 w-48 bg-surface rounded-lg shadow-2xl py-1 z-50 border border-gray-700/30 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 origin-top-right transform scale-95 group-hover:scale-100">
                            <a href="/account/details" class="block px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center">
                                <i class="fas fa-cog mr-2 text-primary/80"></i>
                                Configuración
                            </a>
                            <div class="border-t border-gray-700/30 my-1"></div>
                            <button @onclick="Logout" class="block w-full text-left px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center">
                                <i class="fas fa-sign-out-alt mr-2 text-primary/80"></i>
                                Cerrar Sesión
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Barra de búsqueda -->
    <section class="py-12 bg-gradient-to-br from-primary/10 to-transparent">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-3xl">
            <h1 class="text-2xl font-bold text-center mb-6">Encuentra tu barbería ideal</h1>
            <div class="relative">
                <input type="text" 
                       @bind="searchTerm"
                       @oninput="HandleInput"
                       @onkeydown="HandleKeyDown"
                       placeholder="Buscar por nombre de barbería" 
                       class="w-full bg-surface border border-gray-700 rounded-full py-3 px-5 text-sm focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-transparent shadow-sm" />
                <button @onclick="SearchByName" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-primary transition-colors duration-200">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </section>

    <!-- Resultados -->
    <main class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="max-w-6xl mx-auto">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4">
                <h2 class="text-xl font-semibold">@filteredCompanies.Count barberías disponibles</h2>
            </div>

            <div class="grid md:grid-cols-2 gap-6">
                @if (filteredCompanies.Any())
                {
                    @foreach (var company in filteredCompanies)
                    {
                        <div class="bg-surface rounded-xl border border-gray-700/30 overflow-hidden hover:shadow-lg transition-all duration-300">
                            <div class="relative h-48 bg-gray-800/50">
                                @if (!string.IsNullOrEmpty(company.LogoUrl))
                                {
                                    <img src="@company.LogoUrl" alt="Logo de @company.Name" class="w-full h-full object-cover opacity-90" />
                                }
                                else
                                {
                                    <div class="w-full h-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center">
                                        <i class="fas fa-cut text-4xl text-white/30"></i>
                                    </div>
                                }
                                <div class="absolute top-4 right-4 @(company.Status == Status.Activated ? "bg-green-900/30 text-green-400" : "bg-red-900/30 text-red-400") text-xs px-2 py-1 rounded-full">
                                    @(company.Status == Status.Activated ? "Abierto ahora" : "Cerrado")
                                </div>
                            </div>
                            
                            <div class="p-5">
                                <div class="flex justify-between items-start">
                                    <div>
                                        <h3 class="font-bold text-lg">@company.Name</h3>
                                        <p class="text-gray-400 text-sm mt-1 flex items-center">
                                            <i class="fas fa-map-marker-alt mr-2 text-xs"></i> @company.AddresCompanies
                                        </p>
                                    </div>
                                    <div class="text-xs text-gray-500">
                                        <i class="fas fa-calendar-day mr-1"></i> @company.RegistrationDateCompany?.ToString("dd/MM/yyyy")
                                    </div>
                                </div>
                                
                                <div class="mt-3 grid grid-cols-2 gap-2 text-sm">
                                    <div class="flex items-center text-gray-400">
                                        <i class="fas fa-phone-alt mr-2 text-xs"></i>
                                        <span>@company.PhoneNumber</span>
                                    </div>
                                    <div class="flex items-center text-gray-400">
                                        <i class="fas fa-envelope mr-2 text-xs"></i>
                                        <span>@(string.IsNullOrEmpty(company.Email) ? "No especificado" : company.Email)</span>
                                    </div>
                                </div>
                                
                                <div class="mt-3">
                                    <p class="text-gray-500 text-sm line-clamp-2">@company.DescriptionCompanies</p>
                                </div>
                                
                                <div class="mt-5 flex justify-end">
                                    <a href="/barbershop/profile/@company.RegisteredCompaniesId" class="text-sm px-4 py-2 bg-primary/10 hover:bg-primary/20 text-primary rounded-md transition-colors duration-200">
                                        Ver disponibilidad
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-span-2 text-center py-12">
                        <i class="fas fa-cut text-4xl text-gray-500 mb-4"></i>
                        <h3 class="text-xl font-medium text-gray-400">
                            @(allCompanies.Any() ? "No hay resultados para tu búsqueda" : "No hay barberías disponibles")
                        </h3>
                        <p class="text-gray-500 mt-2">
                            @(allCompanies.Any() ? "Intenta con otro término de búsqueda" : "Pronto tendremos barberías cerca de ti")
                        </p>
                    </div>
                }
            </div>
            
            @if (filteredCompanies.Any() && filteredCompanies.Count > 4)
            {
                <div class="flex justify-center mt-12">
                    <nav class="flex items-center space-x-2">
                        <a href="#" class="w-10 h-10 flex items-center justify-center rounded-md bg-gray-800 hover:bg-gray-700 transition-colors duration-200">
                            <i class="fas fa-chevron-left text-xs"></i>
                        </a>
                        <a href="#" class="w-10 h-10 flex items-center justify-center rounded-md bg-primary text-white">
                            1
                        </a>
                    </nav>
                </div>
            }
        </div>
    </main>
</body>

@code {
    private List<RegisteredCompaniesDTO> allCompanies = new List<RegisteredCompaniesDTO>();
    private List<RegisteredCompaniesDTO> filteredCompanies = new List<RegisteredCompaniesDTO>();
    private string searchTerm = string.Empty;
    private string currentSearchTerm = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadCompanies();
    }
    
    private async Task LoadCompanies()
    {
        try
        {
            var storedCompanies = await LocalStorage.GetItemAsync<List<RegisteredCompaniesDTO>>("CompaniesList");
            allCompanies = storedCompanies?.OrderByDescending(c => c.RegistrationDateCompany).ToList() ?? new List<RegisteredCompaniesDTO>();
            filteredCompanies = allCompanies.ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar empresas: {ex.Message}");
            allCompanies = new List<RegisteredCompaniesDTO>();
            filteredCompanies = new List<RegisteredCompaniesDTO>();
        }
        StateHasChanged();
    }
    
    private void HandleInput(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? string.Empty;
        currentSearchTerm = searchTerm;
    }
    
    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SearchByName();
        }
    }
    
    private void SearchByName()
    {
        if (string.IsNullOrWhiteSpace(currentSearchTerm))
        {
            filteredCompanies = allCompanies.ToList();
        }
        else
        {
            var term = currentSearchTerm.Trim().ToLower();
            filteredCompanies = allCompanies
                .Where(c => c.Name != null && c.Name.ToLower().Contains(term))
                .OrderBy(c => c.Name)
                .ToList();
        }
        StateHasChanged();
    }
    
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login");
    }
}