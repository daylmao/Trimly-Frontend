@page "/reset-password"
@using Trimly.Core.Application.DTOs.ResetPassword
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<main class="bg-background text-text flex flex-col min-h-screen">
  <header class="bg-surface shadow-md">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-center h-16">
        <a href="/" class="flex items-center">
          <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">Trimly</span>
        </a>
      </div>
    </div>
  </header>

  <main class="flex-grow flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="bg-surface p-8 rounded-lg shadow-lg max-w-md w-full">
      <div class="text-center mb-8">
        <div class="flex justify-center mb-6">
          <div class="bg-primary/20 rounded-full p-4">
            <i class="fas fa-key text-4xl text-primary"></i>
          </div>
        </div>
        <h1 class="text-3xl font-bold text-primary mb-2">Recuperar contraseña</h1>
        <p class="text-gray-400">Ingresa tu correo electrónico y te enviaremos un enlace para restablecer tu contraseña</p>
      </div>

      <EditForm Model="@request" OnValidSubmit="@SendResetLink">
        <div class="mb-6">
          <label for="email" class="block text-sm font-medium mb-2">Correo electrónico</label>
          <InputText @bind-Value="@request.Email" type="email" id="email" class="w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-lg" />
        </div>
        <button disabled="@_isLoading" type="submit" class="w-full bg-primary text-white py-3 rounded-md hover:bg-purple-700 transition-colors duration-200 font-medium flex items-center justify-center">
          @if (_isLoading)
          {
            <span class="animate-spin">↻</span>
            <span>Enviando...</span>
          }
          else
          {
            <i class="fas fa-paper-plane mr-2"></i>
            <span>Enviar enlace de recuperación</span>
          }
        </button>
      </EditForm>

      @if (!string.IsNullOrEmpty(errorMessage))
      {
        <div class="p-3 bg-red-900/20 border-l-4 border-red-500 text-red-300 rounded">
          <br/>
          <p>@errorMessage</p>
        </div>
      }

      <div class="mt-6 text-center">
        <p class="text-sm text-gray-400">¿Recuerdas tu contraseña? <a href="/login" class="text-accent hover:underline">Inicia sesión</a></p>
      </div>

      <div class="mt-8 border-t border-gray-700 pt-6">
        <p class="text-sm text-gray-400 text-center">Si tienes problemas para recuperar tu cuenta, por favor <a href="contacto.html" class="text-accent hover:underline">contáctanos</a>.</p>
      </div>
    </div>
  </main>

  <footer class="bg-surface py-8">
    <div class="container mx-auto px-6 text-center">
      <div class="text-2xl font-bold text-primary mb-4 flex items-center justify-center">
        <i class="fas fa-cut mr-2"></i>
        Trimly
      </div>
      <div class="flex justify-center space-x-6 mb-4">
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300"><i class="fab fa-facebook-f"></i></a>
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300"><i class="fab fa-twitter"></i></a>
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300"><i class="fab fa-instagram"></i></a>
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300"><i class="fab fa-linkedin-in"></i></a>
      </div>
      <p class="text-gray-400">&copy; 2025 Trimly. Todos los derechos reservados.</p>
    </div>
  </footer>
</main>

@code {
  private ResetPasswordRequestDTO request = new();
  private string errorMessage = string.Empty;
  private bool _isLoading = false;

  private async Task SendResetLink()
  {
    _isLoading = true;
    errorMessage = string.Empty;

    var response = await AuthService.ResetPasswordAsync(request);

    if (!response.Success)
    {
      errorMessage = response.Error;
    }
    else
    {
      await LocalStorage.SetItemAsync("Email",request.Email);
      Navigation.NavigateTo("/confirm-reset-password", true);
      StateHasChanged(); 
    }

    _isLoading = false;
  }
}
