@page "/appointments"
@using Trimly.Core.Application.DTOs.Appointment
@using Trimly.Core.Application.Pagination
@using Trimly.Core.Domain.Enums
@using Trimly.Infrastructure.Api
@inject IAuthService AuthService
@inject IAppointmentHttpService _appointmentService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = nameof(Roles.Client))]

<body class="bg-background text-text min-h-screen">
<!-- Encabezado con efecto de vidrio esmerilado mejorado -->
<header class="bg-surface/90 backdrop-blur-lg shadow-xl sticky top-0 z-50 border-b border-white/5">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      
      <!-- Logo con efecto de gradiente animado -->
      <div class="flex items-center">
        <a href="/user/home" class="flex items-center group">
          <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent group-hover:bg-gradient-to-l transition-all duration-500">Trimly</span>
          <span class="ml-2 w-2 h-2 rounded-full bg-primary animate-pulse"></span>
        </a>
      </div>

      <!-- Main navigation - desktop only con subrayado animado -->
      <nav class="hidden md:flex items-center space-x-1">
        <a href="/user/home" class="px-3 py-2 rounded-md text-sm font-medium relative group">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-home mr-2 text-gray-400 group-hover:text-primary transition-colors"></i>
            Inicio
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300"></span>
        </a>
        <a href="/explorer" class="px-3 py-2 rounded-md text-sm font-medium relative group">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-search mr-2 text-gray-400 group-hover:text-primary transition-colors"></i>
            Explorar
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300"></span>
        </a>
        <a href="/appointments" class="px-3 py-2 rounded-md text-sm font-medium relative group">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-calendar-alt mr-2 text-primary"></i>
            Mis Citas
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-full transition-all duration-300"></span>
        </a>
      </nav>

      <!-- Search and profile mejorado -->
      <div class="flex items-center space-x-4">
    <!-- Profile menu con animación mejorada -->
    <div class="relative group">
        <div class="flex items-center space-x-1 p-1 rounded-full hover:bg-gray-700/50 transition-all duration-300 cursor-pointer">
            <div class="relative">
                <!-- Aquí está el icono con el fondo que reemplaza la imagen -->
                <div class="w-8 h-8 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
                    <i class="fas fa-user-astronaut text-sm text-white/90"></i>
                </div>
                <span class="absolute bottom-0 right-0 w-2.5 h-2.5 bg-green-500 rounded-full border border-gray-800"></span>
            </div>
            <i class="fas fa-chevron-down text-xs hidden md:block transition-transform duration-300 group-hover:rotate-180"></i>
        </div>

        <!-- Dropdown menu con sombra y borde mejorados -->
        <div class="absolute right-0 mt-2 w-48 bg-surface rounded-lg shadow-2xl py-1 z-50 border border-gray-700/30
            opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 origin-top-right transform scale-95 group-hover:scale-100">
            <a href="/account/details" class="block px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center">
                <i class="fas fa-cog mr-2 text-primary/80"></i>
                Configuración
            </a>
            <div class="border-t border-gray-700/30 my-1"></div>
            <button @onclick="Logout"
                    class="block w-full text-left px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center">
                <i class="fas fa-sign-out-alt mr-2 text-primary/80"></i>
                Cerrar Sesión
            </button>
        </div>
    </div>
</div>
    </div>
  </div>
</header>

<!-- Contenido principal con efecto de aparición -->
<main class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <div class="max-w-4xl mx-auto">
    <!-- Encabezado de la página -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-12 gap-4">
      <div>
        <h1 class="text-4xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          Mis Citas
        </h1>
        <p class="text-gray-400 mt-2 flex items-center">
          <span class="w-2 h-2 rounded-full bg-primary mr-2 animate-pulse"></span>
          Tus próximas citas programadas
        </p>
      </div>
    </div>

    <!-- Lista de citas con diseño moderno -->
    <div class="space-y-6">
      @foreach (var cita in pagedAppointments.Items)
      {
      var startDate = cita.StartDateTime?.ToString("dd");
      var startMonth = cita.StartDateTime?.ToString("MMM").ToUpper();
      var startTime = cita.StartDateTime?.ToString("h:mm tt");
      var endTime = cita.EndDateTime?.ToString("h:mm tt");
      var isConfirmed = cita.AppointmentStatus == AppointmentStatus.Confirmed;
      var isRescheduled = cita.AppointmentStatus == AppointmentStatus.Rescheduled; // Nueva validación

      <div class="bg-surface rounded-xl shadow-lg overflow-hidden border border-gray-700/30 hover:border-primary/50 transition-all duration-300 group">
        <div class="p-6">
          <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-6">
            <!-- Información principal -->
            <div class="flex items-start gap-4">
              <div class="bg-primary/20 text-primary rounded-xl p-3 flex flex-col items-center justify-center min-w-[60px] transform group-hover:-translate-y-1 transition-transform duration-300">
                <span class="text-lg font-bold">@startDate</span>
                <span class="text-xs">@startMonth</span>
              </div>
              <div>
                <h2 class="text-xl font-bold group-hover:text-primary transition-colors duration-300">@cita.Services?.Name</h2>
                <div class="flex items-center mt-2 text-gray-400">
                  <i class="far fa-clock mr-2 text-primary/70"></i>
                  <span>@startTime - @endTime</span>
                </div>
              </div>
            </div>

            <!-- Acciones y estado -->
            <div class="flex flex-col items-end gap-3">
              @if (isConfirmed)
              {
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-900/30 text-green-400 border border-green-400/30">
                                <span class="w-2 h-2 bg-green-400 rounded-full mr-2 animate-pulse"></span>
                                Confirmada
                            </span>
              }
              else if (isRescheduled)
              {
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-900/30 text-blue-400 border border-blue-400/30">
                                <span class="w-2 h-2 bg-blue-400 rounded-full mr-2 animate-pulse"></span>
                                Reprogramada
                            </span>
              }
              else
              {
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-900/30 text-yellow-400 border border-yellow-400/30">
                                <span class="w-2 h-2 bg-yellow-400 rounded-full mr-2 animate-pulse"></span>
                                Pendiente
                            </span>
              }

              <div class="flex flex-col sm:flex-row gap-2">
                <button @onclick="() => OpenRescheduleModal(cita.AppointmentId)"
                        disabled="@(isProcessing && currentProcessingId == cita.AppointmentId || isRescheduled)"
                        class="px-4 py-2 bg-gray-700/50 hover:bg-gray-600 rounded-lg text-sm transition-all duration-300 flex items-center justify-center transform hover:-translate-y-0.5 hover:shadow-md
                                           disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none">
                  @if (isProcessing && currentProcessingId == cita.AppointmentId)
                  {
                  <i class="fas fa-spinner fa-spin mr-2 text-primary"></i>
                  <span>Procesando...</span>
                  }
                  else if (isRescheduled)
                  {
                  <i class="fas fa-check-circle mr-2 text-blue-400"></i>
                  <span>Reprogramada</span>
                  }
                  else
                  {
                  <i class="fas fa-calendar-alt mr-2 text-primary"></i>
                  <span>Reprogramar</span>
                  }
                </button>
                <button @onclick="() => CancelAppointment(cita.AppointmentId)"
                        disabled="@(isProcessing && currentProcessingId == cita.AppointmentId || isRescheduled)"
                        class="px-4 py-2 bg-red-900/30 hover:bg-red-900/50 text-red-400 rounded-lg text-sm transition-all duration-300 flex items-center justify-center transform hover:-translate-y-0.5 hover:shadow-md
                                           disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none">
                  @if (isProcessing && currentProcessingId == cita.AppointmentId)
                  {
                  <i class="fas fa-spinner fa-spin mr-2"></i>
                  <span>Cancelando...</span>
                  }
                  else if (isRescheduled)
                  {
                  <i class="fas fa-ban mr-2 text-gray-400"></i>
                  <span>No cancelable</span>
                  }
                  else
                  {
                  <i class="fas fa-times mr-2"></i>
                  <span>Cancelar</span>
                  }
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      }
    </div>

    <!-- Modal de Reprogramación (agregar al final del componente) -->
    @if (showRescheduleModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
        <div class="bg-surface rounded-xl shadow-2xl p-6 w-full max-w-md border border-gray-700/30">
            <h3 class="text-xl font-bold mb-4 text-primary">Reprogramar Cita</h3>

            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium mb-1 text-gray-400">Nueva Fecha/Hora Inicio (Local)</label>
                    <input type="datetime-local" @bind="localStartDateTime" 
                           class="w-full bg-gray-700/50 border border-gray-600 rounded-lg px-3 py-2 text-white focus:ring-primary focus:border-primary" />
                </div>

                <div>
                    <label class="block text-sm font-medium mb-1 text-gray-400">Nueva Fecha/Hora Fin (Local)</label>
                    <input type="datetime-local" @bind="localEndDateTime" 
                           class="w-full bg-gray-700/50 border border-gray-600 rounded-lg px-3 py-2 text-white focus:ring-primary focus:border-primary" />
                </div>
            </div>

            <div class="flex justify-end space-x-3 mt-6">
                <button @onclick="() => showRescheduleModal = false"
                        class="px-4 py-2 bg-gray-700/50 hover:bg-gray-600 rounded-lg transition-colors duration-300 text-white">
                    Cancelar
                </button>
                <button @onclick="HandleReschedule"
                        disabled="@isProcessing"
                        class="px-4 py-2 bg-primary hover:bg-primary/80 rounded-lg transition-colors duration-300 text-white
                               disabled:opacity-50 disabled:cursor-not-allowed">
                    @if (isProcessing)
                    {
                        <i class="fas fa-spinner fa-spin mr-2"></i>
                        <span>Procesando...</span>
                    }
                    else
                    {
                        <span>Confirmar</span>
                    }
                </button>
            </div>
        </div>
    </div>
  }
  </div>
</main>

<!-- Footer minimalista con efecto de vidrio esmerilado -->
<footer class="bg-surface/80 backdrop-blur-sm mt-16 py-8 border-t border-white/5">
  <div class="container mx-auto px-6">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <div class="mb-6 md:mb-0">
        <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          Trimly
        </span>
        <p class="text-gray-400 mt-2 flex items-center">
          <span class="w-2 h-2 rounded-full bg-primary mr-2 animate-pulse"></span>
          La mejor forma de reservar tu barbero.
        </p>
      </div>
      <div class="flex space-x-6">
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300 transform hover:scale-125">
          <i class="fab fa-facebook-f"></i>
        </a>
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300 transform hover:scale-125">
          <i class="fab fa-instagram"></i>
        </a>
        <a href="#" class="text-gray-400 hover:text-primary transition duration-300 transform hover:scale-125">
          <i class="fab fa-twitter"></i>
        </a>
      </div>
    </div>
    <div class="border-t border-gray-700/30 mt-8 pt-8 text-center text-gray-400">
      <p>© 2025 Trimly. Todos los derechos reservados.</p>
    </div>
  </div>
</footer>

<style>
  /* Animaciones personalizadas */
  .animate-bounce-slow {
    animation: bounce-slow 3s infinite;
  }
  
  @@keyframes bounce-slow {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-5px); }
  }
</style>
</body>

@code {
  
  private PagedResponse<AppointmentDTos> pagedAppointments = new();
  private int currentPage = 1;
  private int pageSize = 15;
  private bool isProcessing = false;
  private Guid? currentProcessingId = null;
  private Guid? appointmentToReschedule = null;
  private bool showRescheduleModal = false;
  private DateTime? localStartDateTime;
  private DateTime? localEndDateTime;
  private RescheduleAppointmentDTos rescheduleRequest = new();

  protected override async Task OnInitializedAsync()
  {
    await LoadAppointments();
  }

  private async Task LoadAppointments()
  {
    var response = await _appointmentService.PaginationAppointmentsAsync(
      pageNumber: currentPage,
      pageSize: pageSize);

    if (response.Success)
    {
      pagedAppointments = new PagedResponse<AppointmentDTos>
      {
        Items = new List<AppointmentDTos>(response.Data.Items), 
        TotalCount = response.Data.TotalCount,
        PageNumber = response.Data.PageNumber,
        PageSize = response.Data.PageSize
      };
    }
    else
    {
      pagedAppointments = new PagedResponse<AppointmentDTos>();
    }
    StateHasChanged(); // Forzar actualización de UI
  }
  
  private void OpenRescheduleModal(Guid appointmentId)
  {
    appointmentToReschedule = appointmentId;
        
    // Establecer valores iniciales (puedes ajustar según necesites)
    localStartDateTime = DateTime.Now;
    localEndDateTime = DateTime.Now.AddHours(1); // Ejemplo: 1 hora por defecto
        
    showRescheduleModal = true;
    StateHasChanged();
  }
  
  private async Task HandleReschedule()
  {
    if (!appointmentToReschedule.HasValue) return;

    try
    {
      isProcessing = true;
      StateHasChanged();

      // Convertir a UTC antes de enviar al backend
      rescheduleRequest.NewStartDateTime = localStartDateTime?.ToUniversalTime();
      rescheduleRequest.NewEndDateTime = localEndDateTime?.ToUniversalTime();

      var response = await _appointmentService.RescheduleAppointmentAsync(
        appointmentToReschedule.Value, 
        rescheduleRequest);

      if (response.Success)
      {
        showRescheduleModal = false;
        await LoadAppointments(); // Refrescar la lista
      }
      else
      {
        // Mostrar error (puedes implementar un toast notification)
        Console.WriteLine($"Error: {response.ErrorMessage}");
      }
    }
    finally
    {
      isProcessing = false;
      StateHasChanged();
    }
  }
  
  private async Task CancelAppointment(Guid appointmentId)
  {
    try
    {
      isProcessing = true;
      currentProcessingId = appointmentId;
      StateHasChanged();
      
      var appointment = pagedAppointments.Items.FirstOrDefault(a => a.AppointmentId == appointmentId);
      if (appointment != null)
      {
        appointment.AppointmentStatus = AppointmentStatus.Cancelled;
        StateHasChanged();
      }
            
      var response = await _appointmentService.CanceledAppointmentAsync(appointmentId);

      if (response?.Success == true)
      {
        await Task.Delay(500); 
        
        pagedAppointments.Items = pagedAppointments.Items
          .Where(a => a.AppointmentId != appointmentId)
          .ToList();
                    
        pagedAppointments.TotalCount--;
      }
      else if (appointment != null)
      {
        // Revertir cambios si falla
        appointment.AppointmentStatus = AppointmentStatus.Pending;
      }
    }
    finally
    {
      isProcessing = false;
      currentProcessingId = null;
      StateHasChanged();
    }
  }
  
    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login");
    }
}