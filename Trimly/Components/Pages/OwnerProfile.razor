@page "/owner/profile"
@using System.Globalization
@using Trimly.Core.Application.DTOs.Account
@inject ILocalStorageService LocalStorage
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@{
  var culture = new CultureInfo("es-DO");
  CultureInfo.DefaultThreadCurrentCulture = culture;
  CultureInfo.DefaultThreadCurrentUICulture = culture;
}

<body class="min-h-screen bg-background text-text">
<div class="flex h-screen overflow-hidden">
  <!-- Sidebar -->
  <aside class="hidden md:flex md:flex-col w-64 bg-surface border-r border-gray-700">
    <!-- Logo -->
    <div class="p-4 border-b border-gray-700">
      <NavLink href="/" class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
        Trimly
      </NavLink>
    </div>

    <!-- Navigation -->
    <nav class="flex-1 overflow-y-auto py-4">
      <ul class="space-y-1 px-2">
        <li>
          <NavLink href="/owner-dashboard" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-tachometer-alt w-5 h-5 mr-3"></i>
            Dashboard
          </NavLink>
        </li>
        <li>
          <NavLink href="/owner/companies" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-store w-5 h-5 mr-3"></i>
            Mis Barberías
          </NavLink>
        </li>
        <li>
          <NavLink href="/owner/barberos" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-cut w-5 h-5 mr-3"></i>
            Barberos
          </NavLink>
        </li>
        <li>
          <NavLink href="/owner/schedule" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-clock w-5 h-5 mr-3"></i>
            Horarios
          </NavLink>
        </li>
        <li>
          <NavLink href="/owner/appointments" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-calendar-alt w-5 h-5 mr-3"></i>
            Citas
          </NavLink>
        </li>
        <li>
          <NavLink href="/owner/reviews" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
            <i class="fas fa-star w-5 h-5 mr-3"></i>
            Reseñas
          </NavLink>
        </li>
      </ul>

      <!-- Configuración Section -->
      <div class="mt-8 px-4">
        <h3 class="px-2 text-xs font-semibold text-gray-400 uppercase tracking-wider">
          Configuración
        </h3>
        <ul class="mt-2 space-y-1">
          <li>
            <NavLink href="/owner/profile" class="flex items-center px-4 py-2 text-sm rounded-md bg-primary/10 text-primary">
              <i class="fas fa-user-circle w-5 h-5 mr-3"></i>
              Mi Perfil
            </NavLink>
          </li>
          <li>
            <NavLink href="/owner/settings" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700">
              <i class="fas fa-cog w-5 h-5 mr-3"></i>
              Ajustes
            </NavLink>
          </li>
        </ul>
      </div>
    </nav>

    <!-- User Info -->
    <div class="px-4 py-3 border-t border-gray-800/50 bg-gradient-to-r from-gray-900/50 to-gray-800/20">
      <div class="flex items-center justify-between">
        <div class="relative">
          <div class="w-10 h-10 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
            <i class="fas fa-user-astronaut text-sm text-white/90"></i>
          </div>
          <div class="absolute -bottom-0.5 -right-0.5 w-3 h-3 rounded-full bg-gradient-to-r from-emerald-400 to-cyan-400 border-2 border-gray-900 animate-pulse"></div>
        </div>

        <div class="flex-1 px-3 overflow-hidden">
          <p class="text-sm font-medium tracking-wide text-gray-100 truncate">
            Mi Cuenta
          </p>
          <p class="text-xs text-purple-300/80 font-medium truncate">
            Propietario
          </p>
        </div>

        <button @onclick="Logout"
                class="p-2 rounded-full group transition-all duration-300 hover:bg-purple-900/20"
                title="Cerrar sesión">
          <div class="relative">
            <i class="fas fa-arrow-right-from-bracket text-gray-400 group-hover:text-purple-300 group-hover:scale-110 transition-all duration-300"></i>
            <div class="absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_12px_3px_rgba(196,181,253,0.4)] transition-all duration-500"></div>
          </div>
        </button>
      </div>
    </div>  
    </aside>

  <!-- Loading Indicator -->
  @if (_isLoading)
  {
    <div class="fixed inset-0 flex items-center justify-center bg-black/50 z-50">
      <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
    </div>
  }

  <!-- Error Message -->
  @if (!string.IsNullOrEmpty(_message))
  {
    <div class="fixed top-4 right-4 p-4 bg-red-100 text-red-700 rounded-md shadow-lg z-50 max-w-md">
      @_message
    </div>
  }


  <!-- Main Content -->
  <div class="flex-1 flex flex-col overflow-hidden">
    <!-- Top Header Simplificado -->
    <header class="bg-surface/80 backdrop-blur-md border-b border-white/5">
      <div class="px-6 py-4">
        <h1 class="text-xl font-semibold">Mi Perfil</h1>
      </div>
    </header>

    <!-- Main Content Area Minimalista -->
    <main class="flex-1 overflow-y-auto bg-background p-6">
      <div class="max-w-4xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Columna izquierda - Perfil -->
        <div class="lg:col-span-1">
          <div class="bg-surface border border-white/5 rounded-xl p-6 sticky top-6">
            <!-- Avatar dinámico -->
            <div class="flex flex-col items-center">
              <div class="relative mb-4">
                <div class="w-32 h-32 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center text-white text-4xl font-bold shadow-lg">
                  @if (!string.IsNullOrWhiteSpace(_profileDto.FirstName) && !string.IsNullOrWhiteSpace(_profileDto.LastName))
                  {
                    <span>@GetDynamicInitials(_profileDto.FirstName, _profileDto.LastName)</span>
                  }
                  else
                  {
                    <i class="fas fa-user"></i>
                  }

                </div>
              </div>

              <h2 class="text-2xl font-bold text-center">@(_profileDto?.FullName ?? "Cargando...")</h2>
              <p class="text-primary mb-4">Propietario</p>
            </div>
          </div>
        </div>

        <!-- Columna derecha - Información -->
        <div class="lg:col-span-2 space-y-6">
          <!-- Información Personal -->
          <div class="bg-surface border border-white/5 rounded-xl p-6">
            <div class="flex items-center mb-4">
              <div class="bg-primary/10 text-primary p-2 rounded-lg mr-3">
                <i class="fas fa-user"></i>
              </div>
              <h3 class="text-lg font-semibold">Información Personal</h3>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="text-sm text-gray-400">Nombre</label>
                <p class="font-medium">@(_profileDto?.FirstName ?? "Cargando...")</p>
              </div>

              <div>
                <label class="text-sm text-gray-400">Apellido</label>
                <p class="font-medium">@(_profileDto?.LastName ?? "Cargando...")</p>
              </div>

              <div>
                <label class="text-sm text-gray-400">Correo electrónico</label>
                <p class="font-medium">@(_profileDto?.Email ?? "Cargando...")</p>
              </div>

              <div>
                <label class="text-sm text-gray-400">Teléfono</label>
                <p class="font-medium">
                  @if (!string.IsNullOrEmpty(_profileDto?.PhoneNumber))
                  {
                    @_profileDto.PhoneNumber
                  }
                  else
                  {
                    <span class="text-gray-500">No especificado</span>
                  }
                </p>
              </div>
            </div>
          </div>

          <!-- Información de Cuenta -->
          <div class="bg-surface border border-white/5 rounded-xl p-6">
            <div class="flex items-center mb-4">
              <div class="bg-primary/10 text-primary p-2 rounded-lg mr-3">
                <i class="fas fa-shield-alt"></i>
              </div>
              <h3 class="text-lg font-semibold">Información de Cuenta</h3>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="text-sm text-gray-400">Nombre de usuario</label>
                <p class="font-medium">@(_profileDto?.UserName ?? "Cargando...")</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</div>
</body>


@code {
    private ProfileDTO _profileDto = new();
    private UpdateAccountDTO _updateAccountDto = new();
    private string _message = string.Empty;
    private bool _isLoading = true;
    private bool _isSuccess = false;
    private bool _isDeleting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadAccountDetails();
    }

    private async Task LoadAccountDetails()
    {
        _isLoading = true;
        StateHasChanged();

        var userId = await LocalStorage.GetItemAsync<string>("userId");
        
        if (string.IsNullOrEmpty(userId))
        {
            _message = "No se encontró el ID de usuario";
            _isLoading = false;
            StateHasChanged();
            return;
        }

        var response = await AuthService.GetAccountDetailsAsync(userId);

        _profileDto = response.Success ? response.Data : new ProfileDTO();
        _updateAccountDto = new UpdateAccountDTO {
            FirstName = _profileDto.FirstName,
            LastName = _profileDto.LastName,
            UserName = _profileDto.UserName,
        };
        
        _message = response.Success ? string.Empty : response.ErrorMessage;
        _isLoading = false;
        StateHasChanged();
    }

    private async Task HandleSubmit()
    {
        _isLoading = true;
        _message = string.Empty;
        
        try
        {
            var userId = await LocalStorage.GetItemAsync<string>("userId");
            var response = await AuthService.UpdateAccountProperties(_updateAccountDto, userId);

            _isSuccess = response.Success;
            _message = response.Success ? 
                "Información actualizada correctamente" : 
                "Error al actualizar la información";

            if (response.Success)
            {
                // Recargar los datos después de actualizar
                await LoadAccountDetails();
                await Task.Delay(1500); // Espera menos tiempo
                _message = string.Empty;
            }
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task DeleteAccount()
    {
        // Tu lógica para eliminar cuenta
    }
    
    private string GetDynamicInitials(string firstName, string lastName)
    {
      var firstInitial = !string.IsNullOrEmpty(firstName) ? firstName[0].ToString().ToUpper() : "";
      var lastInitial = !string.IsNullOrEmpty(lastName) ? lastName[0].ToString().ToUpper() : "";
        
      if (string.IsNullOrEmpty(firstInitial) && string.IsNullOrEmpty(lastInitial))
      {
        return "<i class='fas fa-user'></i>";
      }
        
      return $"{firstInitial}{lastInitial}";
    }

    private async Task Logout()
    {
      await AuthService.LogoutAsync();
      NavigationManager.NavigateTo("/login");
    }
}


