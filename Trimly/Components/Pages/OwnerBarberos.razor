@page "/owner/barberos"
@using Trimly.Core.Application.DTOs.Barbers
@inject IAuthService AuthService
@inject CustomAuthStateProvider CustomAuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = nameof(Roles.Owner))]

<div class="min-h-screen bg-background text-text">
    <div class="flex h-screen overflow-hidden">
        <!-- Sidebar -->
        <aside class="hidden md:flex md:flex-col w-64 bg-surface border-r border-gray-700">
            <!-- Logo -->
            <div class="p-4 border-b border-gray-700">
                <NavLink href="/" class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
                    Trimly
                </NavLink>
            </div>

            <!-- Navigation -->
            <nav class="flex-1 overflow-y-auto py-4">
                <ul class="space-y-1 px-2">
                    <li>
                        <NavLink href="/owner-dashboard" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                            <i class="fas fa-tachometer-alt w-5 h-5 mr-3"></i>
                            Dashboard
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/owner/companies" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                            <i class="fas fa-store w-5 h-5 mr-3"></i>
                            Mis Barberías
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/owner/barberos" class="flex items-center px-4 py-2 text-sm rounded-md bg-primary/10 text-primary">
                            <i class="fas fa-cut w-5 h-5 mr-3"></i>
                            Barberos
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/owner/schedule" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                            <i class="fas fa-clock w-5 h-5 mr-3"></i>
                            Horarios
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/owner/appointments" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                            <i class="fas fa-calendar-alt w-5 h-5 mr-3"></i>
                            Citas
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="/owner/reviews" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                            <i class="fas fa-star w-5 h-5 mr-3"></i>
                            Reseñas
                        </NavLink>
                    </li>
                </ul>

                <div class="mt-8 px-4">
                    <h3 class="px-2 text-xs font-semibold text-gray-400 uppercase tracking-wider">
                        Configuración
                    </h3>
                    <ul class="mt-2 space-y-1">
                        <li>
                            <NavLink href="/owner/profile" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                                <i class="fas fa-user-circle w-5 h-5 mr-3"></i>
                                Mi Perfil
                            </NavLink>
                        </li>
                        <li>
                            <NavLink href="/owner/settings" class="flex items-center px-4 py-2 text-sm rounded-md hover:bg-gray-700 transition-colors">
                                <i class="fas fa-cog w-5 h-5 mr-3"></i>
                                Ajustes
                            </NavLink>
                        </li>
                    </ul>
                </div>
            </nav>

            <!-- User -->
            <div class="px-4 py-3 border-t border-gray-800/50 bg-gradient-to-r from-gray-900/50 to-gray-800/20">
                <div class="flex items-center justify-between">

                    <div class="relative">
                        <div class="w-10 h-10 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
                            <i class="fas fa-user-astronaut text-sm text-white/90"></i>
                        </div>
                        <div class="absolute -bottom-0.5 -right-0.5 w-3 h-3 rounded-full bg-gradient-to-r from-emerald-400 to-cyan-400 border-2 border-gray-900 animate-pulse"></div>
                    </div>

                    <div class="flex-1 px-3 overflow-hidden">
                        <p class="text-sm font-medium tracking-wide text-gray-100 truncate">
                            Mi Cuenta
                        </p>
                        <p class="text-xs text-purple-300/80 font-medium truncate">
                            Propietario
                        </p>
                    </div>

                    <button @onclick="Logout"
                            class="p-2 rounded-full group transition-all duration-300 hover:bg-purple-900/20"
                            title="Cerrar sesión">
                        <div class="relative">
                            <i class="fas fa-arrow-right-from-bracket text-gray-400 group-hover:text-purple-300 group-hover:scale-110 transition-all duration-300"></i>
                            <div class="absolute inset-0 rounded-full opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_12px_3px_rgba(196,181,253,0.4)] transition-all duration-500"></div>
                        </div>
                    </button>
                </div>
            </div>
        </aside>

        <!-- Main Content -->
        <div class="flex-1 flex flex-col overflow-hidden">
            <!-- Top Header -->
            <header class="bg-surface/80 backdrop-blur-md shadow-md z-10">
                <div class="px-6 py-4 flex justify-between items-center">
                    <div>
                        <h1 class="text-xl font-semibold">Gestión de Barberos</h1>
                        <p class="text-sm text-gray-400">Administra tu equipo de barberos</p>
                    </div>
                </div>
            </header>

            <!-- Main Content Area -->
            <main class="flex-1 overflow-y-auto bg-background p-6">
                <!-- Toolbar -->
                <div class="bg-surface rounded-xl shadow-md p-6 mb-6">
                    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                        <div class="flex-1 max-w-md">
                            <div class="relative">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <i class="fas fa-search text-gray-400"></i>
                                </div>
                                <input
                                    type="text"
                                    placeholder="Buscar barbero..."
                                    class="w-full pl-10 pr-4 py-2.5 bg-gray-800 border border-gray-700 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                    @bind="searchTerm"
                                    @oninput="FilterBarbers"
                                />
                            </div>
                        </div>

                        <button @onclick="ShowModal"
                                class="inline-flex items-center justify-center gap-2 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white px-5 py-2.5 rounded-lg font-medium transition-all shadow-lg shadow-primary/10">
                            <i class="fas fa-plus"></i>
                            Añadir Barbero
                        </button>
                    </div>
                </div>

                <!-- Status Messages -->
                @if (showActivationSuccessMessage)
                {
                    <div class="mb-6 p-4 bg-green-500/10 border border-green-500/30 rounded-lg flex items-start">
                        <i class="fas fa-check-circle text-green-400 mt-1 mr-3"></i>
                        <div>
                            <p class="font-medium text-green-400">¡Cuenta activada!</p>
                            <p class="text-sm text-green-300">La cuenta del barbero se ha activado correctamente.</p>
                        </div>
                        <button @onclick="() => showActivationSuccessMessage = false"
                                class="ml-auto text-green-400 hover:text-green-300">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                }

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-lg flex items-start">
                        <i class="fas fa-exclamation-circle text-red-400 mt-1 mr-3"></i>
                        <div>
                            <p class="font-medium text-red-400">Error</p>
                            <p class="text-sm text-red-300">@errorMessage</p>
                        </div>
                        <button @onclick="() => errorMessage = null"
                                class="ml-auto text-red-400 hover:text-red-300">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                }

                <!-- Barber List -->
                @if (filteredBarbers.Count == 0 && barbers.Count > 0)
                {
                    <div class="bg-surface rounded-xl shadow-md p-8 text-center">
                        <div class="mx-auto w-20 h-20 bg-gray-800 rounded-full flex items-center justify-center mb-4">
                            <i class="fas fa-search text-gray-400 text-2xl"></i>
                        </div>
                        <h3 class="text-lg font-medium text-white mb-2">No se encontraron resultados</h3>
                        <p class="text-gray-400 mb-4">No hay barberos que coincidan con tu búsqueda</p>
                        <button @onclick="() => { searchTerm = string.Empty; FilterBarbers(); }"
                                class="px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-sm">
                            Limpiar búsqueda
                        </button>
                    </div>
                }
                else if (barbers.Count == 0)
                {
                    <div class="bg-surface rounded-xl shadow-md p-8 text-center">
                        <div class="relative w-24 h-24 mx-auto mb-6">
                            <div class="absolute inset-0 bg-primary/10 rounded-full animate-ping"></div>
                            <div class="relative z-10 flex items-center justify-center bg-primary/20 text-primary rounded-full w-full h-full">
                                <i class="fas fa-cut text-3xl"></i>
                            </div>
                        </div>
                        <h3 class="text-lg font-medium text-white mb-2">No tienes barberos registrados</h3>
                        <p class="text-gray-400 mb-6">Comienza agregando barberos a tu equipo</p>
                        <button @onclick="ShowModal"
                                class="px-5 py-2.5 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white rounded-lg font-medium flex items-center justify-center mx-auto transition-all shadow-lg shadow-primary/10">
                            <i class="fas fa-plus mr-2"></i>
                            Añadir primer barbero
                        </button>
                    </div>
                }
                else
                {
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        @foreach (var barber in filteredBarbers)
                        {
                            <div class="bg-surface rounded-xl shadow-md overflow-hidden border border-gray-700 hover:border-primary/30 transition-all duration-300 group">
                                <!-- Imagen y info básica -->
                                <div class="p-5 flex items-center">

                                    <div class="relative">
                                        <div class="w-14 h-14 rounded-full bg-gradient-to-r from-primary to-blue-600 text-white flex items-center justify-center text-sm font-semibold border-2 border-gray-700 group-hover:border-primary/50 transition-all">
                                            @GetDynamicInitials(barber.Username)
                                        </div>

                                        <span class="absolute bottom-0 right-0 w-3.5 h-3.5 @(barber.IsActive ? "bg-green-500" : "bg-yellow-500") border-2 border-surface rounded-full"></span>
                                    </div>
                                    
                                    <div class="ml-4 flex-1 min-w-0">
                                        <h3 class="text-lg font-semibold truncate">@barber.Username</h3>
                                        <p class="text-sm text-gray-400 truncate">@barber.Email</p>
                                    </div>
                                </div>

                                <!-- Detalles y botones -->
                                <div class="border-t border-gray-700 px-5 py-4 bg-gray-800/20">
                                    <div class="grid grid-cols-2 gap-4 mb-4">
                                        <div>
                                            <p class="text-xs text-gray-400 mb-1">Nombre de usuario</p>
                                            <p class="text-sm font-medium">@barber.Username</p>
                                        </div>
                                        <div>
                                            <p class="text-xs text-gray-400 mb-1">Email</p>
                                            <p class="text-sm font-medium truncate">@barber.Email</p>
                                        </div>
                                    </div>

                                    <div class="flex space-x-3">
                                        <button @onclick="() => ShowBarberDetails(barber)"
                                                class="flex-1 bg-gray-700 hover:bg-gray-600 text-white px-3 py-2 rounded-lg text-sm flex items-center justify-center transition-colors">
                                            <i class="fas fa-eye mr-2"></i>
                                            Ver detalles
                                        </button>

                                        @if (!barber.IsActive)
                                        {
                                            <button @onclick="() => ShowActivateAccountModal(barber)"
                                                    class="flex-1 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white px-3 py-2.5 rounded-lg text-sm flex items-center justify-center transition-all shadow-md shadow-primary/10">
                                            <i class="fas fa-user-check mr-2"></i>
                                                Activar Cuenta
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </main>
        </div>
    </div>

    <!-- Add Barber Modal -->
    @if (showModal)
    {
        <div class="fixed inset-0 z-50">
            <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" @onclick="HideModal"></div>
            <div class="absolute inset-0 flex items-center justify-center p-4">
                <div class="bg-surface rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-hidden flex flex-col"
                     @onclick:stopPropagation>
                    <!-- Header -->
                    <div class="p-6 border-b border-gray-700 flex justify-between items-center bg-gradient-to-r from-gray-900 to-gray-800">
                        <div>
                            <h3 class="text-xl font-bold text-white">Añadir Barbero</h3>
                            <p class="text-sm text-gray-300">Completa los datos del nuevo barbero</p>
                        </div>
                        <button @onclick="HideModal"
                                class="p-2 rounded-full hover:bg-gray-700 transition-colors text-gray-300 hover:text-white">
                            <i class="fas fa-times text-lg"></i>
                        </button>
                    </div>

                    <!-- Content -->
                    <div class="flex-1 overflow-y-auto p-6">
                        <EditForm Model="_request" OnValidSubmit="HandleValidSubmit">
                            <div class="space-y-6">
                                <!-- Personal Info Section -->
                                <div>
                                    <h4 class="text-md font-medium mb-4 pb-2 border-b border-gray-700 text-white">
                                        Información Personal
                                    </h4>
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Nombre *</label>
                                            <InputText @bind-Value="_request.FirstName"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="Ej: Miguel Ángel"/>
                                            <ValidationMessage For="@(() => _request.FirstName)" class="text-red-400 text-xs mt-1" />
                                        </div>

                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Apellido *</label>
                                            <InputText @bind-Value="_request.LastName"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="Ej: Gómez Sánchez"/>
                                            <ValidationMessage For="@(() => _request.LastName)" class="text-red-400 text-xs mt-1" />
                                        </div>
                                    </div>
                                </div>

                                <!-- Contact Info Section -->
                                <div>
                                    <h4 class="text-md font-medium mb-4 pb-2 border-b border-gray-700 text-white">
                                        Información de Contacto
                                    </h4>
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Email *</label>
                                            <InputText @bind-Value="_request.Email"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="Ej: miguel.angel@example.com"/>
                                            <ValidationMessage For="@(() => _request.Email)" class="text-red-400 text-xs mt-1" />
                                        </div>

                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Teléfono *</label>
                                            <InputText @bind-Value="_request.PhoneNumber"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="Ej: +809888777"/>
                                            <ValidationMessage For="@(() => _request.PhoneNumber)" class="text-red-400 text-xs mt-1" />
                                        </div>
                                    </div>
                                </div>

                                <!-- Account Info Section -->
                                <div>
                                    <h4 class="text-md font-medium mb-4 pb-2 border-b border-gray-700 text-white">
                                        Información de Cuenta
                                    </h4>
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Nombre de usuario *</label>
                                            <InputText @bind-Value="_request.UserName"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="Ej: miguelangel"/>
                                            <ValidationMessage For="@(() => _request.UserName)" class="text-red-400 text-xs mt-1" />
                                        </div>

                                        <div>
                                            <label class="block text-sm font-medium text-gray-300 mb-2">Contraseña *</label>
                                            <InputText type="password" @bind-Value="_request.Password"
                                                       class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                                       placeholder="••••••••••"/>
                                            <ValidationMessage For="@(() => _request.Password)" class="text-red-400 text-xs mt-1" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Footer -->
                            <div class="mt-8 pt-6 border-t border-gray-700 flex justify-end space-x-3">
                                <button type="button" @onclick="HideModal"
                                        class="px-5 py-2.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium transition-all">
                                    Cancelar
                                </button>
                                <button type="submit" disabled="@isLoading"
                                        class="px-5 py-2.5 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white rounded-lg font-medium flex items-center transition-all shadow-lg shadow-primary/10">
                                    @if (isLoading)
                                    {
                                        <span class="animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2"></span>
                                        <span>Guardando...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-save mr-2"></i>
                                        <span>Guardar Barbero</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Barber Details Modal -->
    @if (selectedBarber != null)
    {
        <div class="fixed inset-0 z-50">
            <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" @onclick="HideModalDetails"></div>
            <div class="absolute inset-0 flex items-center justify-center p-4">
                <div class="bg-surface rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-hidden flex flex-col"
                     @onclick:stopPropagation>
                    <!-- Header -->
                    <div class="p-6 border-b border-gray-700 flex justify-between items-center bg-gradient-to-r from-gray-900 to-gray-800">
                        <div>
                            <h3 class="text-xl font-bold text-white">Detalles del Barbero</h3>
                            <p class="text-sm text-gray-300">Información completa del barbero</p>
                        </div>
                        <button @onclick="HideModalDetails"
                                class="p-2 rounded-full hover:bg-gray-700 transition-colors text-gray-300 hover:text-white">
                            <i class="fas fa-times text-lg"></i>
                        </button>
                    </div>

                    <!-- Content -->
                    <div class="flex-1 overflow-y-auto p-6">
                        <div class="flex flex-col md:flex-row gap-6 mb-8">
                            <div class="flex-shrink-0">
                                <img src="https://ui-avatars.com/api/?name=@(selectedBarber.Username)&background=random&color=fff"
                                     alt="@selectedBarber.Username"
                                     class="w-32 h-32 rounded-full object-cover mx-auto md:mx-0 border-4 border-primary/20 shadow-lg">
                            </div>
                            <div class="flex-1">
                                <div class="mb-6">
                                    <h4 class="text-2xl font-bold text-white">@selectedBarber.Username</h4>
                                    <p class="text-gray-400">Barbero profesional</p>
                                </div>

                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <p class="text-xs font-medium text-gray-400 mb-1 uppercase tracking-wider">Email</p>
                                        <p class="text-sm">@selectedBarber.Email</p>
                                    </div>
                                    <div>
                                        <p class="text-xs font-medium text-gray-400 mb-1 uppercase tracking-wider">Nombre de usuario</p>
                                        <p class="text-sm">@selectedBarber.Username</p>
                                    </div>
                                    <div class="md:col-span-2">
                                        <p class="text-xs font-medium text-gray-400 mb-1 uppercase tracking-wider">ID de usuario</p>
                                        <p class="text-sm font-mono bg-gray-800 p-2 rounded-lg">@selectedBarber.UserId</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Footer -->
                    <div class="p-4 border-t border-gray-700 bg-gray-900/50 flex justify-end">
                        <button @onclick="HideModalDetails"
                                class="px-5 py-2.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium transition-all">
                            Cerrar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Activate Account Modal -->
    @if (showActivateAccountModal)
    {
        <div class="fixed inset-0 z-50">
            <div class="absolute inset-0 bg-black/50 backdrop-blur-sm" @onclick="HideActivateAccountModal"></div>
            <div class="absolute inset-0 flex items-center justify-center p-4">
                <div class="bg-surface rounded-xl shadow-2xl w-full max-w-md overflow-hidden flex flex-col"
                     @onclick:stopPropagation>
                    <!-- Header -->
                    <div class="p-6 border-b border-gray-700 flex justify-between items-center bg-gradient-to-r from-gray-900 to-gray-800">
                        <div>
                            <h3 class="text-xl font-bold text-white">Activar Cuenta</h3>
                            <p class="text-sm text-gray-300">Confirmar cuenta del barbero</p>
                        </div>
                        <button @onclick="HideActivateAccountModal"
                                class="p-2 rounded-full hover:bg-gray-700 transition-colors text-gray-300 hover:text-white">
                            <i class="fas fa-times text-lg"></i>
                        </button>
                    </div>

                    <!-- Content -->
                    <div class="p-6">
                        <div class="text-center mb-6">
                            <div class="flex justify-center mb-4">
                                <div class="bg-primary/20 rounded-full p-3">
                                    <i class="fas fa-envelope-open-text text-3xl text-primary"></i>
                                </div>
                            </div>
                            <h4 class="text-lg font-bold text-primary mb-2">Confirmar cuenta</h4>
                            <p class="text-gray-400">Ingresa el token de confirmación enviado al correo del barbero</p>
                        </div>

                        <EditForm Model="_confirmAccountRequestDto" OnValidSubmit="HandleSubmit">
                            <div class="mb-6">
                                <label class="block text-sm font-medium text-gray-300 mb-2">Token de confirmación *</label>
                                <InputText @bind-Value="_confirmAccountRequestDto.Token"
                                           class="w-full bg-gray-800 border border-gray-700 rounded-lg px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all"
                                           placeholder="Ingresa el token aquí"/>
                                <ValidationMessage For="@(() => _confirmAccountRequestDto.Token)" class="text-red-400 text-xs mt-1" />
                            </div>

                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="mb-4 p-3 bg-red-900/20 border-l-4 border-red-500 text-red-300 rounded">
                                    <p>@errorMessage</p>
                                </div>
                            }

                            <div class="mt-6 flex justify-end space-x-3">
                                <button type="button" @onclick="HideActivateAccountModal"
                                        class="px-5 py-2.5 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium transition-all">
                                    Cancelar
                                </button>
                                <button type="submit" disabled="@isLoading"
                                        class="px-5 py-2.5 bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-white rounded-lg font-medium flex items-center transition-all shadow-lg shadow-primary/10">
                                    @if (isLoading)
                                    {
                                        <span class="animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white mr-2"></span>
                                        <span>Procesando...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-check-circle mr-2"></i>
                                        <span>Confirmar Cuenta</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Loading Overlay -->
    @if (isLoading && !showModal && !showActivateAccountModal)
    {
        <div class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center">
            <div class="text-center bg-surface p-8 rounded-xl shadow-2xl border border-gray-700 max-w-md">
                <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-primary mx-auto mb-4"></div>
                <h3 class="text-lg font-medium text-white mb-2">Procesando solicitud</h3>
                <p class="text-gray-400">Por favor espera mientras completamos tu solicitud...</p>
            </div>
        </div>
    }
</div>

@code {
    private RegisterRequestDTO _request = new();
    private List<BarberDTO> barbers = new();
    private List<BarberDTO> filteredBarbers = new();
    private BarberDTO? selectedBarber = null;
    private bool isLoading = false;
    private string? errorMessage;
    private bool showModal = false;
    private bool showSuccessMessage = false;
    private string searchTerm = string.Empty;
    private bool showActivateAccountModal = false;
    private ConfirmAccountRequestDTO _confirmAccountRequestDto = new();
    private BarberDTO? barberToActivate = null;
    private bool showActivationSuccessMessage = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadBarbersFromLocalStorage();
    }

    private async Task LoadBarbersFromLocalStorage()
    {
        var storedBarbers = await LocalStorage.GetItemAsync<List<BarberDTO>>("barbers");
        if (storedBarbers != null)
        {
            barbers = storedBarbers;
            filteredBarbers = new List<BarberDTO>(barbers);
        }
    }

    private void FilterBarbers()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredBarbers = new List<BarberDTO>(barbers);
        }
        else
        {
            var term = searchTerm.ToLower();
            filteredBarbers = barbers.Where(b =>
                (b.Username?.ToLower().Contains(term) ?? false) ||
                (b.Email?.ToLower().Contains(term) ?? false)
            ).ToList();
        }
    }

    private void ShowModal()
    {
        _request = new RegisterRequestDTO();
        showModal = true;
        showSuccessMessage = false;
        errorMessage = null;
    }

    private void HideModal()
    {
        showModal = false;
    }

    private void ShowBarberDetails(BarberDTO barber)
    {
        selectedBarber = barber;
    }

    private void ShowActivateAccountModal(BarberDTO barber)
    {
        barberToActivate = barber;
        _confirmAccountRequestDto = new ConfirmAccountRequestDTO();
        showActivateAccountModal = true;
        errorMessage = null;
    }

    private void HideActivateAccountModal()
    {
        showActivateAccountModal = false;
        barberToActivate = null;
    }

    private void HideModalDetails()
    {
        selectedBarber = null;
    }

    private async Task HandleValidSubmit()
    {
        isLoading = true;
        errorMessage = null;
        StateHasChanged();

        try
        {
            var response = await AuthService.RegisterAsync("barbers", _request);

            if (!string.IsNullOrEmpty(response.Data.UserId))
            {
                var newBarber = new BarberDTO
                {
                    UserId = response.Data.UserId,
                    Username = _request.UserName,
                    Email = _request.Email
                };

                barbers.Add(newBarber);
                filteredBarbers.Add(newBarber);

                await LocalStorage.SetItemAsync("barbers", barbers);

                showSuccessMessage = true;
                showModal = false;
                _request = new RegisterRequestDTO();
            }
            else
            {
                errorMessage = response.Error ?? "Error en el registro del barbero";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al registrar el barbero: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleSubmit()
    {
        if (barberToActivate == null || string.IsNullOrWhiteSpace(_confirmAccountRequestDto.Token))
        {
            errorMessage = "Datos incompletos para activar la cuenta";
            return;
        }

        isLoading = true;
        errorMessage = null;
        StateHasChanged();

        try
        {
            var response = await AuthService.ConfirmAccountAsync(barberToActivate.UserId!, _confirmAccountRequestDto.Token);

            if (response.Success)
            {
                showActivationSuccessMessage = true;
                showActivateAccountModal = false;
                barberToActivate.IsActive = true;
                await LocalStorage.SetItemAsync("barbers", barbers);
            }
            else
            {
                errorMessage = response.Error ?? "Error al confirmar la cuenta";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al confirmar la cuenta: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    
    private string GetDynamicInitials(string username)
    {
        if (string.IsNullOrWhiteSpace(username))
            return "<i class='fas fa-user'></i>";

        var parts = username.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        var firstInitial = parts.Length > 0 ? parts[0][0].ToString().ToUpper() : "";
        var secondInitial = parts.Length > 1 ? parts[1][0].ToString().ToUpper() : "";

        return $"{firstInitial}{secondInitial}";
    }


    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login");
        StateHasChanged();
    }
}