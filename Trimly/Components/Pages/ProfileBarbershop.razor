@page "/barbershop/profile/{CompanyId}"
@using Trimly.Core.Application.DTOs.Services
@using Trimly.Core.Application.DTOs.Companies
@using Trimly.Core.Application.DTOs.Schedules
@using Trimly.Core.Application.DTOs.Appointment
@using Trimly.Infrastructure.Api
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject IRegisteredCompanyService CompanyService
@inject IServices ServiceService
@inject IScheduleService ScheduleService
@inject IAppointmentHttpService AppointmentService
@attribute [Authorize(Roles = nameof(Roles.Client))]


<body class="bg-background text-text min-h-screen flex flex-col">
<!-- Header -->
<header class="bg-surface/90 backdrop-blur-lg shadow-xl sticky top-0 z-50 border-b border-white/5">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        <NavLink href="/user/home" class="flex items-center group" aria-label="Trimly Home">
          <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent group-hover:bg-gradient-to-l transition-all duration-500">Trimly</span>
          <span class="ml-2 w-2 h-2 rounded-full bg-primary animate-pulse" aria-hidden="true"></span>
        </NavLink>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:flex items-center space-x-1" aria-label="Main navigation">
        <NavLink href="/user/home" class="px-3 py-2 rounded-md text-sm font-medium relative group" aria-current="page">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-home mr-2 text-gray-400 group-hover:text-primary transition-colors" aria-hidden="true"></i>
            Inicio
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300" aria-hidden="true"></span>
        </NavLink>
        <NavLink href="/explorer" class="px-3 py-2 rounded-md text-sm font-medium relative group">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-search mr-2 text-gray-400 group-hover:text-primary transition-colors" aria-hidden="true"></i>
            Explorar
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300" aria-hidden="true"></span>
        </NavLink>
        <NavLink href="/appointments" class="px-3 py-2 rounded-md text-sm font-medium relative group">
          <span class="relative z-10 flex items-center">
            <i class="fas fa-calendar-alt mr-2 text-gray-400 group-hover:text-primary transition-colors" aria-hidden="true"></i>
            Mis Citas
          </span>
          <span class="absolute bottom-0 left-0 h-0.5 bg-primary w-0 group-hover:w-full transition-all duration-300" aria-hidden="true"></span>
        </NavLink>
      </nav>

      <!-- Profile Menu -->
      <div class="flex items-center space-x-4">
        <div class="relative group" role="button" aria-haspopup="true" aria-expanded="false" aria-label="User menu">
          <div class="flex items-center space-x-1 p-1 rounded-full hover:bg-gray-700/50 transition-all duration-300 cursor-pointer focus:outline-none focus:ring-2 focus:ring-primary/50">
            <div class="relative">
              <div class="w-8 h-8 rounded-full bg-gradient-to-tr from-indigo-500 to-purple-600 flex items-center justify-center shadow-[0_0_12px_-2px_rgba(99,102,241,0.5)] group-hover:shadow-[0_0_16px_-1px_rgba(99,102,241,0.7)] transition-all duration-500">
                <i class="fas fa-user-astronaut text-sm text-white/90" aria-hidden="true"></i>
              </div>
              <span class="absolute bottom-0 right-0 w-2.5 h-2.5 bg-green-500 rounded-full border border-gray-800" aria-hidden="true"></span>
            </div>
            <i class="fas fa-chevron-down text-xs hidden md:block transition-transform duration-300 group-hover:rotate-180" aria-hidden="true"></i>
          </div>

          <div class="absolute right-0 mt-2 w-48 bg-surface rounded-lg shadow-2xl py-1 z-50 border border-gray-700/30 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 origin-top-right transform scale-95 group-hover:scale-100">
            <NavLink href="/account/details" class="block px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center focus:outline-none focus:bg-gray-700/50">
              <i class="fas fa-cog mr-2 text-primary/80" aria-hidden="true"></i>
              Configuración
            </NavLink>
            <div class="border-t border-gray-700/30 my-1" aria-hidden="true"></div>
            <button @onclick="Logout" class="block w-full text-left px-4 py-2 text-sm hover:bg-gray-700/50 transition-colors duration-300 flex items-center focus:outline-none focus:bg-gray-700/50">
              <i class="fas fa-sign-out-alt mr-2 text-primary/80" aria-hidden="true"></i>
              Cerrar Sesión
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<main class="flex-grow">
@if (isLoading)
{
    <div class="flex justify-center items-center h-screen" aria-live="polite" aria-busy="true">
        <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary" aria-hidden="true"></div>
        <span class="sr-only">Cargando...</span>
    </div>
}
else if (company == null)
{
    <div class="text-center py-12">
        <i class="fas fa-cut text-4xl text-gray-500 mb-4" aria-hidden="true"></i>
        <h3 class="text-xl font-medium text-gray-400">Barbería no encontrada</h3>
        <p class="text-gray-500 mt-2">No pudimos encontrar la barbería solicitada</p>
        <button @onclick="@(() => NavigationManager.NavigateTo("/explorer"))" 
                class="mt-4 px-4 py-2 bg-primary/10 hover:bg-primary/20 text-primary rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-background">
            Volver al explorador
        </button>
    </div>
}
else
{
    <!-- Profile Header -->
    <div class="bg-gradient-to-br from-primary/10 to-secondary/10 py-12">
        <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex flex-col md:flex-row items-center gap-8">
                <div class="relative">
                    <div class="w-32 h-32 rounded-full bg-surface border-4 border-white shadow-lg overflow-hidden" aria-label="Logo de la barbería">
                        @if (!string.IsNullOrEmpty(company.LogoUrl))
                        {
                            <img src="@company.LogoUrl" alt="Logo Barbería" class="w-full h-full object-cover" />
                        }
                        else
                        {
                            <div class="w-full h-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center">
                                <i class="fas fa-cut text-4xl text-white/30" aria-hidden="true"></i>
                            </div>
                        }
                    </div>
                </div>
                <div class="flex-1">
                    <h1 class="text-3xl font-bold">@company.Name</h1>
                    <p class="text-gray-400 mt-2">@company.DescriptionCompanies</p>
                    <div class="flex flex-wrap gap-4 mt-4">
                        <span class="flex items-center text-sm bg-surface/80 px-3 py-1 rounded-full">
                            <i class="fas fa-map-marker-alt text-primary mr-2" aria-hidden="true"></i>
                            @company.AddresCompanies
                        </span>
                        <span class="flex items-center text-sm bg-surface/80 px-3 py-1 rounded-full">
                            <i class="fas fa-clock text-primary mr-2" aria-hidden="true"></i>
                            @(company.Status == Status.Activated ? "Abierto ahora" : "Cerrado")
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Main Column -->
            <div class="lg:col-span-2 space-y-8">
                <!-- About Us Card -->
                <section class="bg-surface rounded-xl p-6 sm:p-8 border border-gray-700/20 shadow-sm">
                    <div class="flex items-center mb-6">
                        <div class="bg-primary/10 p-3 rounded-lg text-primary mr-4" aria-hidden="true">
                            <i class="fas fa-info-circle text-xl"></i>
                        </div>
                        <h2 class="text-2xl font-bold">Acerca de Nosotros</h2>
                    </div>
                    <p class="text-gray-400 leading-relaxed">
                        @company.DescriptionCompanies
                    </p>
                </section>

                <!-- Services Card -->
                <section class="bg-surface rounded-xl p-6 sm:p-8 border border-gray-700/20 shadow-sm">
                    <div class="flex items-center mb-6">
                        <div class="bg-primary/10 p-3 rounded-lg text-primary mr-4" aria-hidden="true">
                            <i class="fas fa-cut text-xl"></i>
                        </div>
                        <h2 class="text-2xl font-bold">Nuestros Servicios</h2>
                    </div>
                    
                    @if (services != null && services.Any())
                    {
                        <div class="space-y-6" role="list">
                            @foreach (var service in services)
                            {
                                <div class="group border-b border-gray-700/20 pb-6 last:border-0 last:pb-0" role="listitem">
                                    <div class="flex gap-4">
                                        <!-- Service Image -->
                                        <div class="w-24 h-24 rounded-lg overflow-hidden flex-shrink-0">
                                            @if (!string.IsNullOrEmpty(service.ImageUrl))
                                            {
                                                <img src="@service.ImageUrl" alt="@service.Name" class="w-full h-full object-cover" />
                                            }
                                            else
                                            {
                                                <div class="w-full h-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center">
                                                    <i class="fas fa-cut text-3xl text-white/50" aria-hidden="true"></i>
                                                </div>
                                            }
                                        </div>
                                
                                        <!-- Service Details -->
                                        <div class="flex-1">
                                            <div class="flex justify-between items-start">
                                                <div>
                                                    <h3 class="font-bold text-lg group-hover:text-primary transition-colors">@service.Name</h3>
                                                    <p class="text-gray-400 mt-1">@service.Description</p>
                                                </div>
                                                <span class="font-medium bg-primary/10 text-primary px-3 py-1 rounded-full">$@service.Price.ToString("0.00")</span>
                                            </div>
                                    
                                            <!-- Book Button -->
                                            <div class="mt-4">
                                                <button @onclick="() => OpenReservationModal(service)" 
                                                        class="inline-flex items-center text-sm px-4 py-2 bg-primary/10 hover:bg-primary/20 text-primary rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface">
                                                    <i class="fas fa-calendar-alt mr-2" aria-hidden="true"></i> Reservar
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-8 text-gray-500">
                            <i class="fas fa-cut text-3xl mb-4" aria-hidden="true"></i>
                            <p>No hay servicios disponibles</p>
                        </div>
                    }
                </section>
            </div>

            <!-- Sidebar Column -->
            <div class="space-y-8">
                <!-- Schedule Card -->
                <section class="bg-surface rounded-xl p-6 sm:p-8 border border-gray-700/20 shadow-sm">
                    <div class="flex items-center mb-6">
                        <div class="bg-primary/10 p-3 rounded-lg text-primary mr-4" aria-hidden="true">
                            <i class="fas fa-clock text-xl"></i>
                        </div>
                        <h2 class="text-2xl font-bold">Horario</h2>
                    </div>
                    
                    @if (schedules != null && schedules.Any())
                    {
                        <div class="space-y-3" role="list">
                            @foreach (var schedule in schedules.OrderBy(s => s.days))
                            {
                                <div class="flex justify-between items-center py-2 border-b border-gray-700/20" role="listitem">
                                    <span class="text-gray-400">@schedule.days</span>
                                    <span class="font-medium">
                                        @if (schedule.IsHoliday == Status.Activated)
                                        {
                                            <span class="text-primary">Día festivo</span>
                                        }
                                        else
                                        {
                                            @($"{schedule.OpeningTime:hh\\:mm} - {schedule.ClosingTime:hh\\:mm}")
                                        }
                                    </span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-gray-400">Horario no disponible</p>
                    }
                </section>

                <!-- Contact Card -->
                <section class="bg-surface rounded-xl p-6 sm:p-8 border border-gray-700/20 shadow-sm">
                    <div class="flex items-center mb-6">
                        <div class="bg-primary/10 p-3 rounded-lg text-primary mr-4" aria-hidden="true">
                            <i class="fas fa-phone-alt text-xl"></i>
                        </div>
                        <h2 class="text-2xl font-bold">Contacto</h2>
                    </div>
                    
                    <div class="space-y-4" role="list">
                        <div class="flex items-center gap-4 p-3 hover:bg-gray-800/30 rounded-lg transition-colors" role="listitem">
                            <div class="bg-primary/10 p-3 rounded-lg text-primary" aria-hidden="true">
                                <i class="fas fa-map-marker-alt"></i>
                            </div>
                            <div>
                                <p class="font-medium">Dirección</p>
                                <p class="text-gray-400 text-sm">@company.AddresCompanies</p>
                            </div>
                        </div>
                        
                        <div class="flex items-center gap-4 p-3 hover:bg-gray-800/30 rounded-lg transition-colors" role="listitem">
                            <div class="bg-primary/10 p-3 rounded-lg text-primary" aria-hidden="true">
                                <i class="fas fa-phone"></i>
                            </div>
                            <div>
                                <p class="font-medium">Teléfono</p>
                                <p class="text-gray-400 text-sm">@company.PhoneNumber</p>
                            </div>
                        </div>
                        
                    </div>
                </section>

                <!-- Reviews Card -->
                <section class="bg-surface rounded-xl p-6 sm:p-8 border border-gray-700/20 shadow-sm">
                    <div class="flex items-center justify-between mb-6">
                        <div class="flex items-center">
                            <div class="bg-primary/10 p-3 rounded-lg text-primary mr-4" aria-hidden="true">
                                <i class="fas fa-star text-xl"></i>
                            </div>
                            <h2 class="text-2xl font-bold">Reseñas</h2>
                        </div>
                        <a href="/barbershop/profile/@company.RegisteredCompaniesId/reviews" class="text-sm text-primary hover:underline focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface rounded">Ver todo</a>
                    </div>
                    
                    <div class="space-y-6" role="list">
                        <!-- Review 1 -->
                        <div class="flex gap-4" role="listitem">
                            <div class="w-12 h-12 rounded-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center" aria-hidden="true">
                                <i class="fas fa-user text-white/70"></i>
                            </div>
                            <div>
                                <div class="flex justify-between">
                                    <h4 class="font-semibold">John Doe</h4>
                                    <div class="flex text-yellow-400 text-sm" aria-label="5 estrellas">
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <p class="text-gray-400 text-sm mt-1">Hace 2 semanas</p>
                                <p class="text-gray-300 mt-2">Excelente servicio y resultados. Definitivamente volveré.</p>
                            </div>
                        </div>
                        
                        <!-- Review 2 -->
                        <div class="flex gap-4" role="listitem">
                            <div class="w-12 h-12 rounded-full bg-gradient-to-br from-primary/20 to-secondary/20 flex items-center justify-center" aria-hidden="true">
                                <i class="fas fa-user text-white/70"></i>
                            </div>
                            <div>
                                <div class="flex justify-between">
                                    <h4 class="font-semibold">Jane Smith</h4>
                                    <div class="flex text-yellow-400 text-sm" aria-label="4 estrellas">
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="fas fa-star" aria-hidden="true"></i>
                                        <i class="far fa-star" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <p class="text-gray-400 text-sm mt-1">Hace 1 mes</p>
                                <p class="text-gray-300 mt-2">Muy profesional, me encantó el servicio de coloración.</p>
                            </div>
                        </div>
                    </div>
                    
                    <a href="/barbershop/profile/@company.RegisteredCompaniesId/reviews" class="w-full mt-6 py-3 border border-gray-700 rounded-lg hover:bg-gray-800 transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface flex items-center justify-center gap-2">
                        <i class="fas fa-pen" aria-hidden="true"></i> Escribir una reseña
                    </a>
                </section>
            </div>
        </div>
    </div>
}
</main>

<!-- Reservation Modal -->
@if (showReservationModal)
{
    <div class="fixed inset-0 bg-black/70 z-50 flex items-center justify-center p-4" role="dialog" aria-modal="true" aria-labelledby="modal-title">
        <div class="bg-surface rounded-xl max-w-md w-full border border-gray-700/20 shadow-2xl overflow-hidden">
            <div class="bg-gradient-to-r from-primary/10 to-secondary/10 p-6 border-b border-gray-700/20">
                <h3 class="text-xl font-bold" id="modal-title">Reservar Servicio</h3>
                <p class="text-sm text-gray-400 mt-1">@selectedService?.Name</p>
            </div>
            
            <div class="p-6">
                @if (showSuccess)
                {
                    <div class="text-center py-8">
                        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4" aria-hidden="true">
                            <i class="fas fa-check text-green-600 text-xl"></i>
                        </div>
                        <h3 class="text-lg font-medium text-white mb-1">¡Cita agendada!</h3>
                        <p class="text-gray-400">Tu cita ha sido creada exitosamente.</p>
                        <button @onclick="CloseModal" 
                                class="mt-6 px-4 py-2 bg-primary hover:bg-primary/90 text-white rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface">
                            Cerrar
                        </button>
                    </div>
                }
                else
                {
                    <EditForm Model="@appointmentData" OnValidSubmit="@HandleSubmit">
                        <DataAnnotationsValidator />
                        
                        <!-- Mensaje de error -->
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="mb-4 p-4 bg-red-500/10 border border-red-500/30 rounded-lg" role="alert">
                                <p class="text-red-400 text-sm">@errorMessage</p>
                            </div>
                        }
                        
                        <!-- Inicio de la cita -->
                        <div class="mb-6">
                            <label for="startDateTime" class="block text-sm font-medium mb-2">Inicio de la cita *</label>
                            <InputDayAndTime @bind-Value="appointmentData.StarDateTime"
                                            OnDateTimeChanged="UpdateEndTime"
                                            id="startDateTime"
                                            class="w-full" />
                            <ValidationMessage For="@(() => appointmentData.StarDateTime)" class="text-red-400 text-sm mt-1" />
                        </div>
                        
                        <!-- Fin de la cita (solo lectura) -->
                        <div class="mb-6">
                            <label for="endDateTime" class="block text-sm font-medium mb-2">Fin de la cita</label>
                            <input type="text" 
                                   id="endDateTime"
                                   value="@appointmentData.EndDateTime.ToString("f")" 
                                   class="w-full px-4 py-2 rounded-lg bg-white/5 border border-white/10 text-gray-300 cursor-not-allowed"
                                   readonly />
                        </div>
                        
                        <!-- Duración -->
                        <div class="mb-6 bg-gray-800/30 p-3 rounded-lg">
                            <p class="text-sm text-gray-400">Duración:</p>
                            <p class="font-medium">@selectedService?.DurationInMinutes minutos</p>
                        </div>
                        
                        <!-- Botones de acción -->
                        <div class="flex justify-end gap-3 pt-4 border-t border-gray-700/30">
                            <button type="button" 
                                    @onclick="CloseModal" 
                                    class="px-4 py-2 border border-gray-700/30 rounded-lg hover:bg-gray-800/50 transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface"
                                    disabled="@isSubmitting">
                                Cancelar
                            </button>
                            <button type="submit" 
                                    class="px-4 py-2 bg-primary hover:bg-primary/90 text-white rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface flex items-center justify-center min-w-24"
                                    disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="inline-block mr-2" aria-hidden="true">
                                        <span class="animate-spin inline-block w-4 h-4 border-2 border-current border-t-transparent rounded-full"></span>
                                    </span>
                                    <span>Procesando...</span>
                                }
                                else
                                {
                                    <span>Confirmar</span>
                                }
                            </button>
                        </div>
                    </EditForm>
                }
            </div>        
        </div>
    </div>
}

<!-- Footer -->
<footer class="bg-surface/80 border-t border-gray-700/20 py-8 mt-12">
  <div class="container mx-auto px-6">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <div class="mb-4 md:mb-0">
        <span class="text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
          Trimly
        </span>
      </div>
      <div class="flex space-x-6">
        <a href="#" class="text-gray-400 hover:text-primary transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface rounded-full p-2" aria-label="Facebook">
          <i class="fab fa-facebook-f"></i>
        </a>
        <a href="#" class="text-gray-400 hover:text-primary transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface rounded-full p-2" aria-label="Instagram">
          <i class="fab fa-instagram"></i>
        </a>
        <a href="#" class="text-gray-400 hover:text-primary transition-colors focus:outline-none focus:ring-2 focus:ring-primary/50 focus:ring-offset-2 focus:ring-offset-surface rounded-full p-2" aria-label="Twitter">
          <i class="fab fa-twitter"></i>
        </a>
      </div>
    </div>
  </div>
</footer>
</body>

@code {
    [Parameter]
    public string CompanyId { get; set; }
    private bool isSubmitting = false;
    private string errorMessage = string.Empty;
    private bool showSuccess = false;
    private RegisteredCompaniesDTO company;
    private List<ServicesDTos> services;
    private List<ScheduleDTO> schedules;
    private bool isLoading = true;
    private bool showReservationModal = false;
    private ServicesDTos selectedService;
    private CreateAppointmentsDTos appointmentData = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadCompanyData();
    }

    private async Task LoadCompanyData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            
            if (!Guid.TryParse(CompanyId, out var companyId))
            {
                NavigationManager.NavigateTo("/explorer");
                return;
            }

            // Load company data
            var companyResponse = await CompanyService.GetRegisteredCompanyById(companyId);
            if (!companyResponse.Success || companyResponse.Data == null)
            {
                NavigationManager.NavigateTo("/explorer");
                return;
            }
            company = companyResponse.Data;

            // Load services and schedules in parallel
            var servicesTask = ServiceService.GetServicesByCompanyId(companyId);
            var schedulesTask = ScheduleService.GetSchedulesByCompany(companyId);

            await Task.WhenAll(servicesTask, schedulesTask);

            services = servicesTask.Result.Success ? servicesTask.Result.Data : new List<ServicesDTos>();
            schedules = schedulesTask.Result.Success ? schedulesTask.Result.Data : new List<ScheduleDTO>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void OpenReservationModal(ServicesDTos service)
    {
        selectedService = service;
        var now = DateTime.Now;
    
        var minutesToAdd = 15 - (now.Minute % 15);
        var roundedTime = now.AddMinutes(minutesToAdd);
    
        appointmentData = new CreateAppointmentsDTos
        {
            StarDateTime = new DateTime(roundedTime.Year, roundedTime.Month, roundedTime.Day, 
                roundedTime.Hour, roundedTime.Minute, 0),
            EndDateTime = new DateTime(roundedTime.Year, roundedTime.Month, roundedTime.Day,
                roundedTime.Hour, roundedTime.Minute, 0).AddMinutes(service.DurationInMinutes),
            ServiceId = service.ServiceId
        };
    
        showReservationModal = true;
        showSuccess = false;
        errorMessage = string.Empty;
        StateHasChanged();
    }
    
    private void UpdateEndTime(DateTime startTime)
    {
        if (selectedService != null)
        {
            appointmentData.EndDateTime = startTime.AddMinutes(selectedService.DurationInMinutes);
            StateHasChanged();
        }
    }
    
    private async Task HandleSubmit()
    {
        isSubmitting = true;
        errorMessage = string.Empty;
        showSuccess = false;
        StateHasChanged();

        try
        {
            if (appointmentData.StarDateTime < DateTime.Now)
            {
                errorMessage = "No se pueden agendar citas en el pasado";
                return;
            }

            if (!appointmentData.ServiceId.HasValue || selectedService == null)
            {
                errorMessage = "Debe seleccionar un servicio";
                return;
            }

            var endDateTime = appointmentData.StarDateTime.AddMinutes(selectedService.DurationInMinutes);

            var utcStart = appointmentData.StarDateTime.Kind == DateTimeKind.Unspecified 
                ? DateTime.SpecifyKind(appointmentData.StarDateTime, DateTimeKind.Utc)
                : appointmentData.StarDateTime.ToUniversalTime();

            var utcEnd = endDateTime.Kind == DateTimeKind.Unspecified 
                ? DateTime.SpecifyKind(endDateTime, DateTimeKind.Utc)
                : endDateTime.ToUniversalTime();

            var appointmentDto = new CreateAppointmentsDTos() 
            {
                StarDateTime = utcStart,
                EndDateTime = utcEnd,
                ServiceId = appointmentData.ServiceId.Value
            };

            var result = await AppointmentService.CreateAppointmentAsync(appointmentDto);

            if (result.Success)
            {
                showSuccess = true;
                await Task.Delay(1500);
                showReservationModal = false;
            }
            else
            {
                errorMessage = result.ErrorMessage ?? "Ocurrió un error al crear la cita";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error inesperado: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }
    

    private void CloseModal()
    {
        showReservationModal = false;
        showSuccess = false;
        errorMessage = string.Empty;
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/login");
    }
}